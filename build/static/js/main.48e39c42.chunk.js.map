{"version":3,"sources":["images/logo.png","images/tower.png","images/rocket.png","images/srisuvit.png","images/start_game.png","images/send_ans.png","images/score.png","APIClient.js","extension.js","App.js","reportWebVitals.js","index.js","constants.js"],"names":["getGame","token","Promise","resolve","reject","axios","get","Constants","GAME_END_POINT","GAME_URL","headers","then","res","result","data","catch","error","addPlayer","payload","post","PLAYER_END_POINT","PLAYER_URL","updatePlayer","id","put","messageDialog","icon","title","message","Swal","fire","confirmDialog","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","App","props","state","page","playerName","playerID","countdown","question","answers","playerScore","codeGame","baseID","allTime","playerTime","startGameHandle","bind","readCodeGame","onQuestion","sendAnswerHandle","onCountdown","onAnswersHandle","onAndGameHandle","loop","console","log","this","setState","socket","socketIOClient","SOCKET_IO_END_POINT","on","onConnect","onDisconnect","a","length","code_game","name","player_id","status","count","setInterval","clearInterval","prevState","toUpper","x","toUpperCase","trim","ans","split","myAns","map","trueAns","forEach","item_ans","index","push","score","play_time","isConfirmed","className","src","srisuvit_logo","tower","rocket","srisuvit","style","height","type","placeholder","value","onChange","e","target","backgroundImage","start_game","onClick","disabled","send_ans","pageSelect","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports","Object","freeze"],"mappings":"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","file":"static/js/main.48e39c42.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.351b11d1.png\";","export default __webpack_public_path__ + \"static/media/tower.25cf83b1.png\";","export default __webpack_public_path__ + \"static/media/rocket.b93caf60.png\";","export default __webpack_public_path__ + \"static/media/srisuvit.a42f099e.png\";","export default __webpack_public_path__ + \"static/media/start_game.80a3b953.png\";","export default __webpack_public_path__ + \"static/media/send_ans.f707aa89.png\";","export default __webpack_public_path__ + \"static/media/score.4c3f1143.png\";","import axios from 'axios'\nimport Constants from './constants'\n\nexport const getQuestion = (token) => {\n    return new Promise((resolve, reject)=>{\n        axios.get(Constants.QUESTION_END_POINT + Constants.QUESTION_URL, {\n            headers: {\n                \"authorization\": token\n            }\n        })\n        .then(res => {\n            const result = res.data\n            resolve(result)\n        }).catch((error)=>resolve(error))\n    })\n}\n\nexport const getGame = (token) => {\n    return new Promise((resolve, reject)=>{\n        axios.get(Constants.GAME_END_POINT + Constants.GAME_URL, {\n            headers: {\n                \"authorization\": token\n            }\n        })\n        .then(res => {\n            const result = res.data\n            resolve(result)\n        }).catch((error)=>resolve(error))\n    })\n}\n\nexport const addPlayer = (payload) => {\n    return new Promise((resolve, reject) => {\n        axios.post(Constants.PLAYER_END_POINT + Constants.PLAYER_URL, payload)\n        .then(res => {\n            resolve(res)\n        }).catch((error)=>resolve(error))\n    })\n}\n\nexport const updatePlayer = (id, payload) => {\n    return new Promise((resolve, reject) => {\n        axios.put(Constants.PLAYER_END_POINT + Constants.PLAYER_URL + \"/\" +id, payload)\n        .then(res => {\n            resolve(res)\n        }).catch((error)=>resolve(error))\n    })\n}","import Swal from 'sweetalert2'\n\nexport const messageDialog = (icon, title, message) => {\n    Swal.fire(title, message, icon)\n}\n\nexport const confirmDialog = (icon, title, message) => {\n    return new Promise((resolve, reject)=>{\n        Swal.fire({\n            title: title,\n            text: message,\n            icon: icon,\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'ยืนยัน',\n            cancelButtonText: 'ยกเลิก'\n        }).then((result)=>resolve(result))\n    })\n}","import './App.css'\nimport React from 'react'\nimport srisuvit_logo from './images/logo.png'\nimport tower from './images/tower.png'\nimport rocket from './images/rocket.png'\nimport srisuvit from './images/srisuvit.png'\nimport start_game from './images/start_game.png'\nimport send_ans from './images/send_ans.png'\nimport score from './images/score.png'\nimport Constants from './constants'\nimport socketIOClient from 'socket.io-client'\nimport { getGame, addPlayer, updatePlayer } from './APIClient'\nimport { messageDialog, confirmDialog } from './extension'\n\nexport default class App extends React.Component {\n    state = {\n        page: 0,\n        playerName: \"\",\n        playerID: \"\",\n        countdown: 0,\n        question: \"\",\n        answers: \"\",\n        playerScore: 0,\n        codeGame: \"\",\n        baseID: 0,\n        allTime: 0,\n        playerTime: 0\n    }\n\n    constructor(props) {\n        super(props)\n        this.startGameHandle = this.startGameHandle.bind(this)\n        this.readCodeGame = this.readCodeGame.bind(this)\n        this.onQuestion = this.onQuestion.bind(this)\n        this.sendAnswerHandle = this.sendAnswerHandle.bind(this)\n        this.onCountdown = this.onCountdown.bind(this)\n        this.onAnswersHandle = this.onAnswersHandle.bind(this)\n        this.onAndGameHandle = this.onAndGameHandle.bind(this)\n        this.loop = -1\n    }\n\n    onConnect() {\n        console.log(\"เชื่อมต่อ Server แล้ว\")\n    }\n\n    onDisconnect() {\n        console.log(\"ปิดการเชื่อมต่อแล้ว\")\n    }\n\n    onQuestion(result) {\n        this.setState({\n            question: result,\n            answers: \"\"\n        })\n    }\n\n    componentDidMount() {\n        this.socket = socketIOClient(Constants.SOCKET_IO_END_POINT)\n        this.socket.on(\"connect\", this.onConnect)\n        this.socket.on(\"disconnect\", this.onDisconnect)\n        this.socket.on(\"question\", this.onQuestion)\n        this.socket.on(\"countdown\", this.onCountdown)\n        this.socket.on(\"answers\", this.onAnswersHandle)\n        this.socket.on(\"endGame\", this.onAndGameHandle)\n        this.readCodeGame()\n    }\n\n    async readCodeGame() {\n        const res = await getGame(\"no_token\")\n        if (res.length > 0) {\n            this.setState({\n                codeGame: res[0].code_game\n            })\n        }\n    }\n\n    async startGameHandle() {\n        if (this.state.playerName === \"\" || this.state.playerID === \"\") {\n            messageDialog(\"warning\", \"แจ้งเตือน\", \"กรุณาระบุข้อมูลผู้เล่นให้ครบถ้วน\")\n            return\n        }\n\n        if (this.state.codeGame === \"\") {\n            messageDialog(\"error\", \"เกิดข้อผิดพลาด\", \"เกิดข้อผิดพลาดในการเชื่อมต่อ Server\")\n            return\n        }\n\n        const payload = {\n            name: this.state.playerName,\n            player_id: this.state.playerID,\n            code_game: this.state.codeGame\n        }\n\n        const res = await addPlayer(payload);\n        if (res.status === 201) {\n            this.setState({\n                baseID: res.data.id,\n                page: 1\n            })\n        } else {\n            messageDialog(\"error\", \"เกิดข้อผิดพลาด\", \"เกิดข้อผิดพลาดในการเชื่อมต่อ Server\")\n        }\n    }\n\n    onCountdown(result) {\n        this.setState({\n            allTime: result\n        })\n        var count = result;\n        this.loop = setInterval(() => {\n            if (count <= 0) {\n                clearInterval(this.loop)\n                this.setState(prevState => {\n                    return { playerTime: prevState.playerTime + this.state.allTime }\n                })\n            }\n            this.setState({\n                countdown: count\n            })\n            count--\n        }, 1000)\n    }\n\n    onAnswersHandle(result) {\n\n        const toUpper = (x) => {\n            return x.toUpperCase().trim();\n        };\n\n        var ans = result.split(',')\n        var myAns = this.state.answers.split(',')\n        ans = ans.map(toUpper)\n        myAns = myAns.map(toUpper)\n        var trueAns = [];\n        ans.forEach((item_ans) => {\n            for (let index = 0; index < myAns.length; index++) {\n                if (index >= 5) {\n                    break;\n                }\n                if (item_ans === myAns[index]) {\n                    trueAns.push(item_ans.trim())\n                }\n            }\n        })\n\n        if (trueAns.length > 0) {\n            this.setState(prevState => {\n                return { playerScore: prevState.playerScore + trueAns.length }\n            })\n        }\n        this.setState({\n            question: \"\",\n            countdown: 0,\n            answers: \"\"\n        })\n        clearInterval(this.loop)\n    }\n\n    async onAndGameHandle() {\n        this.setState({\n            page: 2\n        })\n\n        const payload = {\n            score: this.state.playerScore,\n            play_time: this.state.playerTime\n        }\n\n        const res = await updatePlayer(this.state.baseID, payload)\n        console.log(res)\n    }\n\n    async sendAnswerHandle() {\n        if (this.state.question === \"\") {\n            messageDialog(\"warning\", \"แจ้งเตือน\", \"โปรดรอคำถาม\")\n            return;\n        }\n\n        if (this.state.answers === \"\") {\n            messageDialog(\"warning\", \"แจ้งเตือน\", \"โปรดตอบคำถาม\")\n            return;\n        }\n\n        const res = await confirmDialog(\"question\", \"ส่งคำตอบ\", \"หมายเหตุ แต่ละข้อคุณจะตอบได้เพียงครั้งเดียวเท่านั้น\")\n\n        this.setState(prevState => {\n            return { playerTime: prevState.playerTime + (this.state.allTime - this.state.countdown) }\n        })\n\n        if (res.isConfirmed) {\n            this.setState({\n                question: \"\",\n                countdown: 0\n            })\n            clearInterval(this.loop)\n            messageDialog(\"success\", \"สำเร็จ\", \"ตอบคำถามแล้ว\")\n        }\n    }\n\n    render() {\n\n        const startGamePage = () => (\n            <header className=\"App-header\">\n                <img className=\"srisuvit\" src={srisuvit} />\n                <div style={{ height: '10vmin' }} />\n                <input type=\"text\" className=\"player_name\" placeholder=\"Player Name\" value={this.state.playerName} onChange={(e) => this.setState({ playerName: e.target.value })} />\n                <div style={{ height: '3vmin' }} />\n                <input type=\"text\" className=\"player_id\" placeholder=\"Player ID\" value={this.state.playerID} onChange={(e) => this.setState({ playerID: e.target.value })} />\n                <div style={{ height: '8vmin' }} />\n                <button className=\"button_start\" style={{\n                    backgroundImage: `url(${start_game})`\n                }} onClick={this.startGameHandle}>\n                </button>\n            </header>\n        )\n\n        const playGamePage = () => (\n            <header className=\"App-header\">\n                <div className=\"countdown\">\n                    <span className=\"time\">00:{\n                        this.state.countdown > 9 ? this.state.countdown : `0${this.state.countdown}`\n                    }</span>\n                </div>\n                <div style={{ height: '10vmin' }} />\n                <span className=\"question_span\">{this.state.question}</span>\n                <div style={{ height: '3vmin' }} />\n                <input disabled={this.state.question === \"\" ? true : false} type=\"text\" className=\"answers\" placeholder=\"คำตอบ\" value={this.state.answers} onChange={(e) => this.setState({ answers: e.target.value })} />\n                <div style={{ height: '8vmin' }} />\n                <button className=\"button_ans\" style={{\n                    backgroundImage: `url(${send_ans})`\n                }} onClick={this.sendAnswerHandle}>\n                </button>\n            </header>\n        )\n\n        const scoreGamePage = () => (\n            <header className=\"App-header\">\n                <img className=\"score\" src={score} />\n                <div style={{ height: '10vmin' }} />\n                <span className=\"palyer_id_span\">{this.state.playerID}</span>\n                <div style={{ height: '8vmin' }} />\n                <span className=\"score_span\">\n                    {this.state.playerScore}\n                </span>\n            </header>\n        )\n\n\n        const pageSelect = () => {\n            switch (this.state.page) {\n                case 0: {\n                    return startGamePage()\n                }\n\n                case 1: {\n                    return playGamePage()\n                }\n\n                case 2: {\n                    return scoreGamePage()\n                }\n            }\n        }\n\n        return (\n            <div className=\"App\">\n                <img className=\"srisuvit_logo\" src={srisuvit_logo} />\n                <img className=\"tower\" src={tower} />\n                <img className=\"rocket\" src={rocket} />\n                {\n                    pageSelect()\n                }\n            </div>\n        )\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = Object.freeze({\n    PLAYER_END_POINT: 'http://player.apipole.dev',\n    PLAYER_URL: '/player',\n    GAME_END_POINT: 'http://game.apipole.dev',\n    GAME_URL: '/game',\n    SOCKET_IO_END_POINT: 'http://socket.apipole.dev'\n})"],"sourceRoot":""}